name: Security Scan

on:
  schedule:
    - cron: '0 3 * * *'  # Daily at 3 AM
  push:
    paths:
    - 'composer.json'
    - 'composer.lock'
    - 'package.json'
    - 'package-lock.json'
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of security scan'
        required: false
        default: 'full'
        type: choice
        options:
        - full
        - dependencies
        - code

permissions:
  contents: read
  security-events: write

jobs:
  security:
    runs-on: ubuntu-latest
    name: Security Analysis
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, dom, fileinfo
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Dependencies
      run: |
        composer install --no-dev
        if [ ! -f package-lock.json ]; then
          npm install --package-lock-only
        fi
        npm ci
        
    - name: PHP Security Audit
      run: |
        composer audit || echo "PHP security audit completed with warnings"
        
    - name: Node.js Security Audit
      run: |
        npm audit || echo "Node.js security audit completed with warnings"
        
    - name: Code Security Scan
      run: |
        if [ -f scripts/security-scanner.js ]; then
          npm run security:scan || echo "Code security scan completed"
        else
          echo "Custom security scanner not found"
        fi
        
    - name: Generate Security Report
      run: |
        mkdir -p security-reports
        echo '{"scan_date": "'$(date)'", "status": "completed"}' > security-reports/report.json
        
    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-report-${{ github.sha }}
        path: security-reports/
        retention-days: 30
